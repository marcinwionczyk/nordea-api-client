/*
 * Authorization API
 *
 * Nordea Authorization API v5
 *
 * The version of the OpenAPI document: 5.0
 * Contact: support@nordeaopenbanking.com
 * Generated by: https://openapi-generator.tech
 */
use serde_derive::{Deserialize, Serialize};

/// ErrorPayload : Error response body
#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ErrorPayload {
    /// More details on the occurred error
    #[serde(rename = "failures", skip_serializing_if = "Option::is_none")]
    pub failures: Option<Vec<crate::api::personal_authorisation::models::Failure>>,
    #[serde(rename = "request", skip_serializing_if = "Option::is_none")]
    pub request: Option<Box<crate::api::personal_authorisation::models::RequestEcho>>,
}
#[allow(dead_code)]
impl ErrorPayload {
    /// Error response body
    pub fn new() -> ErrorPayload {
        ErrorPayload {
            failures: None,
            request: None,
        }
    }
}
