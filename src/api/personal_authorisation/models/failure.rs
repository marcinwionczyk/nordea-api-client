/*
 * Authorization API
 *
 * Nordea Authorization API v5
 *
 * The version of the OpenAPI document: 5.0
 * Contact: support@nordeaopenbanking.com
 * Generated by: https://openapi-generator.tech
 */
use serde_derive::{Deserialize, Serialize};


/// Failure : Validation error
#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Failure {
    /// Failure code
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    /// Failure description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// JSON path of the failing element if applicable
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    /// Type of the validation error, e.g. NotNull
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub failure_type: Option<String>,
}

#[allow(dead_code)]
impl Failure {
    /// Validation error
    pub fn new() -> Failure {
        Failure {
            code: None,
            description: None,
            path: None,
            failure_type: None,
        }
    }
}
